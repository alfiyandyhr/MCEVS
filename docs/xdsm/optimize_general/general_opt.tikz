
%%% Preamble Requirements %%%
% \usepackage{geometry}
% \usepackage{amsfonts}
% \usepackage{amsmath}
% \usepackage{amssymb}
% \usepackage{tikz}

% Optional packages such as sfmath set through python interface
% \usepackage{sfmath}

% \usetikzlibrary{arrows,chains,positioning,scopes,shapes.geometric,shapes.misc,shadows}

%%% End Preamble Requirements %%%

\input{"/opt/anaconda3/envs/mdolab/lib/python3.11/site-packages/pyxdsm/diagram_styles"}
\begin{tikzpicture}

\matrix[MatrixSetup]{
%Row 0
&
\node [DataIO] (output_opt) {$DV_{geom}^{init}, DV_{oper}^{init}$};&
&
\node [DataIO] (output_D1) {$\rho_{air}, g$};&
\node [DataIO] (output_D2) {$g$};&
\node [DataIO] (output_D3) {$\rho_{air}, g, speed, params_{vehicle}$};&
\node [DataIO] (output_D4) {$Range, duration$};&
\node [DataIO] (output_D5) {$params_{vehicle}$};&
\node [DataIO] (output_D6) {$W_{payload}$};&
\\
%Row 1
\node [DataIO] (left_output_opt) {$DV_{geom}^*, DV_{oper}^*$};&
\node [Optimization] (opt) {$\text{Optimizer}$};&
&
\node [DataInter] (opt-D1) {$DV_{geom}, DV_{oper}$};&
&
\node [DataInter] (opt-D3) {$DV_{geom}, DV_{oper}$};&
\node [DataInter] (opt-D4) {$DV_{oper}$};&
\node [DataInter] (opt-D5) {$DV_{geom}$};&
&
\\
%Row 2
\node [DataIO] (left_output_solver) {$F^*$};&
\node [DataInter] (solver-opt) {$F: W_{takeoff}$};&
\node [MDA] (solver) {$\text{Newton Solver}$};&
\node [DataInter] (solver-D1) {$W_{takeoff}$};&
\node [DataInter] (solver-D2) {$W_{takeoff}$};&
\node [DataInter] (solver-D3) {$W_{takeoff}$};&
&
\node [DataInter] (solver-D5) {$W_{takeoff}$};&
\node [DataInter] (solver-D6) {$W_{takeoff}$};&
\\
%Row 3
\node [DataIO] (left_output_D1) {$G^*$};&
\node [DataInter] (D1-opt) {$G: CL_{cruise}$};&
&
\node [Function] (D1) {$\text{Aerodynamics}$};&
\node [DataInter] (D1-D2) {$Drag$};&
&
&
&
&
\\
%Row 4
&
&
&
&
\node [Function] (D2) {$\text{Trim}$};&
\node [DataInter] (D2-D3) {$Thrust, \alpha$};&
&
&
&
\\
%Row 5
\node [DataIO] (left_output_D3) {$G^*$};&
\node [DataInter] (D3-opt) {$G: DL_{segment}, C_{T}/\sigma$};&
&
&
&
\node [Function] (D3) {$\text{Power Analysis}$};&
\node [DataInter] (D3-D4) {$Power_{segment}$};&
\node [DataInter] (D3-D5) {$Power_{segment}$};&
&
\\
%Row 6
&
&
&
&
&
&
\node [Function] (D4) {$\text{Energy Analysis}$};&
\node [DataInter] (D4-D5) {$Energy_{total}$};&
&
\\
%Row 7
&
&
&
&
&
&
&
\node [Function] (D5) {$\text{Weight Analysis}$};&
\node [DataInter] (D5-D6) {$W_{components}$};&
\\
%Row 8
&
&
\node [DataInter] (D6-solver) {$W_{residual}$};&
&
&
&
&
&
\node [Function] (D6) {$\text{Residual Weight}$};&
\\
%Row 9
&
&
&
&
&
&
&
&
&
\\
};

% XDSM process chains
{ [start chain=process]
 \begin{pgfonlayer}{process} 
\chainin (opt);
\chainin (D1) [join=by ProcessHVA];
\chainin (D2) [join=by ProcessHVA];
\chainin (D3) [join=by ProcessHVA];
\chainin (D4) [join=by ProcessHVA];
\chainin (D5) [join=by ProcessHVA];
\chainin (D6) [join=by ProcessHVA];
\chainin (solver) [join=by ProcessHVA];
\chainin (opt) [join=by ProcessHVA];
\end{pgfonlayer}
}

\begin{pgfonlayer}{data}
\path
% Horizontal edges
(opt) edge [DataLine] (opt-D1)
(solver) edge [DataLine] (solver-D1)
(opt) edge [DataLine] (opt-D3)
(opt) edge [DataLine] (opt-D4)
(solver) edge [DataLine] (solver-D2)
(solver) edge [DataLine] (solver-D3)
(solver) edge [DataLine] (solver-D5)
(D1) edge [DataLine] (D1-D2)
(D2) edge [DataLine] (D2-D3)
(D3) edge [DataLine] (D3-D4)
(D3) edge [DataLine] (D3-D5)
(D4) edge [DataLine] (D4-D5)
(solver) edge [DataLine] (solver-D6)
(opt) edge [DataLine] (opt-D5)
(D5) edge [DataLine] (D5-D6)
(D6) edge [DataLine] (D6-solver)
(solver) edge [DataLine] (solver-opt)
(D1) edge [DataLine] (D1-opt)
(D3) edge [DataLine] (D3-opt)
(opt) edge [DataLine] (left_output_opt)
(solver) edge [DataLine] (left_output_solver)
(D1) edge [DataLine] (left_output_D1)
(D3) edge [DataLine] (left_output_D3)
% Vertical edges
(opt-D1) edge [DataLine] (D1)
(solver-D1) edge [DataLine] (D1)
(opt-D3) edge [DataLine] (D3)
(opt-D4) edge [DataLine] (D4)
(solver-D2) edge [DataLine] (D2)
(solver-D3) edge [DataLine] (D3)
(solver-D5) edge [DataLine] (D5)
(D1-D2) edge [DataLine] (D2)
(D2-D3) edge [DataLine] (D3)
(D3-D4) edge [DataLine] (D4)
(D3-D5) edge [DataLine] (D5)
(D4-D5) edge [DataLine] (D5)
(solver-D6) edge [DataLine] (D6)
(opt-D5) edge [DataLine] (D5)
(D5-D6) edge [DataLine] (D6)
(D6-solver) edge [DataLine] (solver)
(solver-opt) edge [DataLine] (opt)
(D1-opt) edge [DataLine] (opt)
(D3-opt) edge [DataLine] (opt)
(opt) edge [DataLine] (output_opt)
(D1) edge [DataLine] (output_D1)
(D2) edge [DataLine] (output_D2)
(D3) edge [DataLine] (output_D3)
(D5) edge [DataLine] (output_D5)
(D4) edge [DataLine] (output_D4)
(D6) edge [DataLine] (output_D6);
\end{pgfonlayer}

\end{tikzpicture}
